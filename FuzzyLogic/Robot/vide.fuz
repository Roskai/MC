configuration
{
	et := min;   
	ou := max;   
	decodage := centre;
	implication := larsen;
	ainsi_que := max;
}

linguistique
{
	// Valeurs linguistiques de la variable linguistique DistGoal
	contact := rampe_bas(0,20);
	proche := triangle(0,20,80);
	loin := rampe_haut(20,80);

	aBonneDistance := triangle(20,50,80)
	tropProche := rampe_bas(20,50);
	tropLoin := rampe_haut(50,80);

	// Valeurs linguistiques de la variable linguistique DirecGoal
	aDroite := rampe_bas(-90.0,0);
	devant := triangle(-90.0,0.0,90.0);
	aGauche := rampe_haut(0.0,90.0);

	// Valeurs linguistiques de la variable linguistique Slin
	enMarcheAvant := triangle(0,150,300);
	aLArret := triangle(-150,0,150);
	enMarcheArriere := triangle(-300,-150,-0);

	// Valeurs linguistiques de la variable linguistique Sang
	tourneADroite := triangle(-200.0,-100.0,0.0);
	toutDroit := triangle(-100.0,0,100.0);
	tourneAGauche := triangle(0.0,100.0,200.0);
}

regles
{
	// Vitesse
	si ObstFront est loin et ObstBack est loin alors Slin est enMarcheAvant;
	si ObstFront est loin et ObstBack est proche alors Slin est enMarcheAvant; 
	si ObstFront est proche et ObstBack est loin alors Slin est enMarcheArriere;

	// Direction
	si ObstRight est aBonneDistance et DirecGoal est aDroite alors Sang est toutDroit;
	si ObstLeft est aBonneDistance et DirecGoal est aGauche alors Sang est toutDroit;
	si ObstRight est tropLoin et DirecGoal est aDroite alors Sang est tourneADroite;
	si ObstLeft est tropLoin et DirecGoal est aGauche alors Sang est tourneAGauche;
	si ObstRight est tropProche et DirecGoal est aDroite alors Sang est tourneAGauche;
	si ObstLeft est tropProche et DirecGoal est aGauche alors Sang est tourneADroite;

	// Blocage
	si Slin est aLArret et Sang est toutDroit alors Sang est tourneADroite;
}
